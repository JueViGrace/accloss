package com.clo.accloss.customer.domain.mappers

import com.clo.accloss.GetCustomersData
import com.clo.accloss.customer.data.remote.model.CustomerItem
import com.clo.accloss.customer.domain.model.Customer
import com.clo.accloss.customer.presentation.model.CustomerData
import com.clo.accloss.Cliente as CustomerEntity

fun CustomerEntity.toDomain(): Customer = Customer(
    cantdocs = cantdocs,
    codigo = codigo,
    contribespecial = contribespecial,
    diasultvta = diasultvta,
    direccion = direccion,
    email = email,
    fchcrea = fchcrea,
    fchultvta = fchultvta,
    fechamodifi = fechamodifi,
    kneActiva = kneActiva,
    kneMtomin = kneMtomin,
    limcred = limcred,
    mtoultvta = mtoultvta,
    noemifac = noemifac.toInt(),
    noeminota = noeminota.toInt(),
    nombre = nombre,
    perscont = perscont,
    prcdpagdia = prcdpagdia,
    precio = precio,
    promdiasp = promdiasp,
    promdiasvta = promdiasvta,
    prommtodoc = prommtodoc,
    riesgocrd = riesgocrd,
    sector = sector,
    status = status,
    subcodigo = subcodigo,
    telefonos = telefonos,
    totmtodocs = totmtodocs,
    vendedor = vendedor,
    empresa = empresa
)

fun Customer.toDatabase(): CustomerEntity = CustomerEntity(
    cantdocs = cantdocs,
    codigo = codigo,
    contribespecial = contribespecial,
    diasultvta = diasultvta,
    direccion = direccion,
    email = email,
    fchcrea = fchcrea,
    fchultvta = fchultvta,
    fechamodifi = fechamodifi,
    kneActiva = kneActiva,
    kneMtomin = kneMtomin,
    limcred = limcred,
    mtoultvta = mtoultvta,
    noemifac = noemifac.toLong(),
    noeminota = noeminota.toLong(),
    nombre = nombre,
    perscont = perscont,
    prcdpagdia = prcdpagdia,
    precio = precio,
    promdiasp = promdiasp,
    promdiasvta = promdiasvta,
    prommtodoc = prommtodoc,
    riesgocrd = riesgocrd,
    sector = sector,
    status = status,
    subcodigo = subcodigo,
    telefonos = telefonos,
    totmtodocs = totmtodocs,
    vendedor = vendedor,
    empresa = empresa
)

fun CustomerItem.toDomain(): Customer = Customer(
    cantdocs = cantdocs ?: 0.0,
    codigo = codigo ?: "",
    contribespecial = contribespecial ?: 0.0,
    diasultvta = diasultvta ?: 0.0,
    direccion = direccion ?: "",
    email = email ?: "",
    fchcrea = fchcrea ?: "",
    fchultvta = fchultvta ?: "",
    fechamodifi = fechamodifi ?: "",
    kneActiva = kneActiva ?: "",
    kneMtomin = kneMtomin ?: 0.0,
    limcred = limcred ?: 0.0,
    mtoultvta = mtoultvta ?: 0.0,
    noemifac = noemifac ?: 0,
    noeminota = noeminota ?: 0,
    nombre = nombre ?: "",
    perscont = perscont ?: "",
    prcdpagdia = prcdpagdia ?: 0.0,
    precio = precio ?: 0.0,
    promdiasp = promdiasp ?: 0.0,
    promdiasvta = promdiasvta ?: 0.0,
    prommtodoc = prommtodoc ?: 0.0,
    riesgocrd = riesgocrd ?: 0.0,
    sector = sector ?: "",
    status = status ?: 0.0,
    subcodigo = subcodigo ?: "",
    telefonos = telefonos ?: "",
    totmtodocs = totmtodocs ?: 0.0,
    vendedor = vendedor ?: ""
)

fun GetCustomersData.toUi(): CustomerData = CustomerData(
    customer = Customer(
        cantdocs = cantdocs,
        codigo = codigo,
        contribespecial = contribespecial,
        diasultvta = diasultvta,
        direccion = direccion,
        email = email,
        fchcrea = fchcrea,
        fchultvta = fchultvta,
        fechamodifi = fechamodifi,
        kneActiva = kneActiva,
        kneMtomin = kneMtomin,
        limcred = limcred,
        mtoultvta = mtoultvta,
        noemifac = noemifac.toInt(),
        noeminota = noeminota.toInt(),
        nombre = nombre,
        perscont = perscont,
        prcdpagdia = prcdpagdia,
        precio = precio,
        promdiasp = promdiasp,
        promdiasvta = promdiasvta,
        prommtodoc = prommtodoc,
        riesgocrd = riesgocrd,
        sector = sector,
        status = status,
        subcodigo = subcodigo,
        telefonos = telefonos,
        totmtodocs = totmtodocs,
        vendedor = vendedor,
        empresa = empresa
    ),
    orders = orders.toInt(),
    debt = debt ?: 0.0,
    expired = expired ?: 0.0
)
